openapi: 3.0.1
info:
  title: IRIDA API
  description: ''
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: contact@irida.ca
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'http://localhost:8080/api'
    description: Local Development
tags:
  - name: ApiRoot
    description: API Root
    externalDocs:
      description: Docs
      url: 'https://irida.corefacility.ca/documentation/developer/rest'
  - name: Users
    description: Details about users
    externalDocs:
      description: Docs
      url: 'https://irida.corefacility.ca/documentation/developer/rest/#users'
  - name: Projects
    description: Details about projects
    externalDocs:
      description: Docs
      url: 'https://irida.corefacility.ca/documentation/developer/rest/#projects'
  - name: Sequencing Runs
    description: Details about Sequencing Runs
    externalDocs:
      description: Docs
      url: 'https://irida.corefacility.ca/documentation/developer/rest/#sequencing-runs'
  - name: Samples
    description: Details about Samples
    externalDocs:
      description: Docs
      url: 'https://irida.corefacility.ca/documentation/developer/rest/#samples'
  - name: Analysis Submissions
    description: Details about Analysis Submissions
    externalDocs:
      description: Docs
      url: 'https://irida.corefacility.ca/documentation/developer/rest/#analysis-submissions'
paths:
  /:
    get:
      tags:
        - ApiRoot
      operationId: getApiRoot
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                type: object
            application/json:
              schema: 
                type: object
          links:
            self:
              operationId: getApiRoot
            projects:
              operationId: getProjects
            sequencingRuns:
              operationId: getSequencingRuns
            analysisSubmissions:
              operationId: getAnalysisSubmissions
            users:
              operationId: getUsers
  /projects:
    get:
      tags:
        - Projects
      operationId: getProjects
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCollection'
          links:
            self:
              operationId: getProjects
  /projects/{id}:
    get:
      tags:
        - Projects
      summary: Get project by id
      description: ''
      operationId: getProjectById
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Project'
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          links:
            self:
              operationId: getProjectById
            analyses:
              operationId: getAnalysesByProject
            users:
              operationId: getUsersByProject
            samples:
              operationId: getSamplesByProject
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Project not found
          content: {}
      security:
        - api_key: []
  /sequencingRuns:
    get:
      tags:
        - Sequencing Runs
      operationId: getSequencingRuns
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/SequencingRunCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/SequencingRunCollection'
  /sequencingRuns/{id}:
    get:
      tags:
        - Sequencing Runs
      operationId: getSequencingRunById
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/SequencingRun'
            application/json:
              schema:
                $ref: '#/components/schemas/SequencingRun'
  /sequencingRuns/miseq:
    post:
      tags:
        - Sequencing Runs
      operationId: postSequencingRunMiseq
      responses:
        '200':
          description: successful operation
  /samples:
    get:
      tags:
        - Samples
      operationId: getSamples
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/SampleCollection'
  '/samples/{id}':
    get:
      tags:
        - Samples
      operationId: getSampleById
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Sample'
            application/json:
              schema:
                $ref: '#/components/schemas/Sample'
  /samples/{id}/metadata:
    get:
      tags:
        - Samples
      operationId: getSampleMetadataBySampleId
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleMetadata'
            application/json:
              schema:
                $ref: '#/components/schemas/SampleMetadata'
  /analysisSubmissions:
    get:
      tags:
        - Analysis Submissions
      operationId: getAnalysisSubmissions
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalysisSubmissionCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisSubmissionCollection'
  /analysisSubmissions/{id}:
    get:
      tags:
        - Analysis Submissions
      operationId: getAnalysisSubmissionById
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/AnalysisSubmission'
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisSubmission'
  /analysisSubmissions/analysisType/{analysisType}:
    get:
      tags:
        - Analysis Submissions
      operationId: getAnalysisSubmissionsByAnalysisType
      parameters:
        - name: analysisType
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/'
            application/json:
              schema:
                $ref: '#/components/schemas/'
  /users:
    get:
      tags:
        - Users
      operationId: getUsers
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCollection'
  /users/{id}:
    get:
      tags:
        - Users
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/LinkHeaderRfc5899'
              description: "Links"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    LinkHeaderRfc5899:
      type: string
      pattern: '^<(.*)>; rel=(.*)$'
      description: "rfc5899 Link header"
    ProjectCollection:
      type: array
      items:
        $ref: '#/components/schemas/Project'
    Project:
      required:
        - name
        - createdDate
        - modifiedDate
        - assembleUploads
        - label
      properties:
        identifier:
          type: integer
        createdDate:
          type: integer
        modifiedDate:
          type: integer
        name:
          type: string
        assembleUploads:
          type: boolean
        label:
          type: string
    SequencingRunCollection:
      type: array
      items:
        $ref: '#/components/schemas/SequencingRun'
    SequencingRun:
      required:
        - identifier
        - projectName
        - workflow
        - experimentName
        - application
        - assay
        - chemistry
        - readLengths
        - investigatorName
        - description
        - uploadStatus
        - layoutType
        - createdDate
      properties:
        identifier:
          type: integer
        projectName:
          type: string
        workflow:
          type: string
        application:
          type: string
        assay:
          type: string
        chemistry:
          type: string
        readLengths:
          type: integer
        investigatorName:
          type: string
        description:
          type: string
        uploadStatus:
          type: string
        layoutType:
          type: string
        createdDate:
          type: integer
    SampleCollection:
      type: array
      items:
        $ref: '#/components/schemas/Sample'
    Sample:
      required:
        - identifier
        - createdDate
        - modifiedDate
        - sampleName
        - description
        - organism
        - isolate
        - strain
        - collectedBy
        - collectionDate
        - geographicLocationName
        - isolationSource
        - latitude
        - longitude
        - label
      properties:
        identifier:
          type: integer
        createdDate:
          type: integer
        modifiedDate:
          type: integer
        sampleName:
          type: string
        description:
          type: string
        organism:
          type: string
        isolate:
          type: string
        strain:
          type: string
        collectedBy:
          type: string
        collectionDate:
          type: integer
        geographicLocationName:
          type: string
        isolationSource:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        label:
          type: string
    SampleMetadata:
      type: object
    UserCollection:
      type: array
      items:
        $ref: '#/components/schemas/User'
    User:
      required:
        - username
        - email
        - firstName
        - lastName
        - phoneNumber
        - identifier
        - createdDate
      properties:
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        identifier:
          type: integer
        createdDate:
          type: integer
    AnalysisSubmissionCollection:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisSubmission'
    AnalysisSubmission:
      required:
        - identifier
        - createdDate
        - analysisCleanedState
        - analysisState
        - modifiedDate
        - inputParameters
        - label
        - name
        - remoteFilesPaired
        - remoteFilesSingle
        - remoteInputDataId
        - remoteWorkflowId
        - workflowId
      properties:
        identifier:
          type: integer
        createdDate:
          type: integer
        modifiedDate:
          type: integer
        analysisCleanedState:
          type: string
        analysisState:
          type: string
        inputParameters:
          type: object
        label:
          type: string
        name:
          type: string
        remoteFilesPaired:
          type: array
        remoteFilesSingle:
          type: array
        remoteInputDataId:
          type: string
        remoteWorkflowId:
          type: string
        workflowId:
          type: string
  securitySchemes:
    irida_auth:
      type: oauth2
      flows:
        password:
          tokenUrl: 'http://localhost:8080/api/oauth/token'
          scopes:
            read: read data
            write: write data
    api_key:
      type: apiKey
      name: api_key
      in: header
